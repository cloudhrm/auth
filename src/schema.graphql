type Query {
  mycompany: [Company!]!
  me: User!
  key(id: ID!): String!
  info: String!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  createCompany(name: String!, homepage: String): Company
  rotateKey: ID
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  company: Company
  groups: [Group!]!
}

type KeyPair {
  id: ID!
  public: String!
}

type Company {
  id: ID!
  name: String!
  homepage: String
  owner: User!
  groups: [Group!]!
}

type Group {
  id: ID!
  name: String!
  company: Company!
  users: [User!]
}
